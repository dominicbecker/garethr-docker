# This file is managed by Puppet and local changes
# may be overwritten

description "start and stop <%= @title %> in docker"
author "Gareth Rushgrove"

start on (started <%= @service_name %>)
stop on stopping <%= @service_name %>

respawn
respawn limit 5 20

<%- if @only_once -%>
task
<%- end -%>

script
  cidfile=/var/run/docker-<%= @sanitised_title %>.cid
  container_exists=0
  cid=

  if [ -e $cidfile ]; then
    cid=$(cat $cidfile)
    docker inspect $cid || container_exists=$?
    if [ $container_exists -ne 0 ]; then
      rm -f $cidfile
    fi
  else
    <%- if @use_name -%>
    docker inspect <%= @name %> || container_exists=$?
    <%- else -%>
    container_exists=1
    <%- end -%>
  fi

  # Not running / never ran
  if [ $container_exists -ne 0 ]; then
    <%= @docker_command %> run --cidfile=$cidfile \
      <% if @username %>-u '<%= @username %>' <% end %> \
      <% if @hostname %>-h '<%= @hostname %>'<% end %> \
      <% if @disable_network %>-n false<% end %> \
      <% if @privileged %>--privileged<% end %> \
      <% if @detach %>--detach=true<% end %> \
      <% if @dns %><% @dns_array.each do |address| %> \
          --dns <%= address %><% end %> \
      <% end %> \
      <% if @dns_search %><% @dns_search_array.each do |domain| %> \
          --dns-search <%= domain %><% end %> \
      <% end %> \
      <% if @env %><% @env_array.each do |env| %> \
          -e <%= env %><% end %> \
      <% end %> \
      <% if @ports %><% @ports_array.each do |port| %> \
          -p <%= port %><% end %> \
      <% end %> \
      <% if @expose %><% @expose_array.each do |expose_port| %> \
          --expose=<%= expose_port %><% end %> \
      <% end %> \
      <% if @volumes %><% @volumes_array.each do |volume| %> \
          -v <%= volume %><% end %> \
      <% end %> \
      <% if @volumes_from %><% @volumes_from_array.each do |container| %> \
          --volumes-from <%= container %><% end %> \
      <% end %> \
      <% if @net %>--net <%= @net %><% end %> \
      <% if @lxc_conf_array %><% @lxc_conf_array.each do |lxcconf| %> \
          --lxc-conf="<%=lxcconf%>"<% end %> \
      <% end %> \
      -m <%= @memory_limit %> \
      <% if not @cpuset_array.empty? %>--cpuset=<%= @cpuset_array.join(',') %><% end %> \
      <% if @links %><%= @links_array.map {|link| \
          "--link #{link}" }.join(' ') %> \
      <% end %> \
      <% if @use_name %>--name <%= @name %><% end %> \
      <% if @extra_parameters %><% @extra_parameters_array.each do |param| %>  \
        <%= param %> <% end %> \
      <% end -%> \
      <%= @image %> \
      <% if @command %> <%= @command %><% end %> &&
    exec <%= @docker_command %> wait $cid
  <%- if not @only_once -%>
  # container exists, start if not running
  else
      running=$(<%= @docker_command %> inspect --format "{{.State.Running}}" <%= if @use_name then @name else "$cid" end %>) # TODO
      if [ "$running" = "false" ]; then
          <%= @docker_command %> start -a -i <%= if @use_name then @name else "$cid" end %>
      fi
  <%- end -%>
  fi
end script

post-stop script
if [ -e "/var/run/docker-<%= @sanitised_title %>.cid" ]; then
  <%= @docker_command %> kill "$(cat /var/run/docker-<%= @sanitised_title %>.cid)"
  # container still exists - don't remove cidfile
fi
end script
